#Survived by Age
boxplot(Fare~Pclass,
data = Pclass3rd, main="Number of Survivors by Age",
ylab="",
xlab = "",
border="orange",
col="steelblue",
freq=FALSE,
las=1,
breaks=5,
horizontal = TRUE,na.rm=TRUE)
boxplot(train_data$Pclass=="3")
boxplot(train_data$Fare,train_data$Pclass=="3")
Pclass3rd <- train_data[train_data$Pclass=="3",]
#Survived by Age
boxplot(Fare~Pclass,
data = Pclass3rd, main="Number of Survivors by Age",
ylab="",
xlab = "",
border="orange",
col="steelblue",
freq=FALSE,
las=1,
breaks=5,
horizontal = TRUE,na.rm=TRUE)
table(train_data$Survived,train_data$Embarked)
#Survived by Age
boxplot(Pclass,
data = Pclass3rd, main="Number of Survivors by Age",
ylab="",
xlab = "",
border="orange",
col="steelblue",
freq=FALSE,
las=1,
breaks=5,
horizontal = TRUE,na.rm=TRUE)
#Survived by Age
boxplot(Pclass,
data = Pclass3rd, main="Number of Survivors by Age",
ylab="",
xlab = "",
border="orange",
col="steelblue",
freq=FALSE,
las=1,
breaks=5,
horizontal = TRUE,na.rm=TRUE)
Pclass3rd
#Survived by Age
boxplot(Pclass,
data = Pclass3rd, main="Number of Survivors by Age",
ylab="",
xlab = "",
border="orange",
col="steelblue",
freq=FALSE,
las=1,
breaks=5,
horizontal = TRUE,na.rm=TRUE)
#valdiation of player's age across
ggFareboxplot <- ggplot(Pclass3rd,aes(Pclass)) +geom_boxplot(fill = "steelblue", colour = "orange",outlier.colour = "red", outlier.shape = 1,na.rm=TRUE)+ggtitle("Age analysis")
ggAgeboxplot+theme
ggFareboxplot+theme
#valdiation of player's age across
ggFareboxplot <- ggplot(Pclass3rd,aes(Fare)) +geom_boxplot(fill = "steelblue", colour = "orange",outlier.colour = "red", outlier.shape = 1,na.rm=TRUE)+ggtitle("Age analysis")
ggFareboxplot+theme
#valdiation of player's age across
ggFareboxplot <- ggplot(Pclass3rd,aes(Fare)) +geom_boxplot(fill = "steelblue", colour = "orange",outlier.colour = "red", outlier.shape = 1,na.rm=TRUE)+ggtitle("Fare analysis on Pclass ==3")
ggFareboxplot+theme
gghistPclass <- ggplot(data=melt(Pclass3rd),mapping = aes(x= value))
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+facet_wrap(~variable,scales = "free_x")+ ggtitle(htitle) + theme
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+ ggtitle(htitle) + theme
gghistPclass <- ggplot(data=melt(Pclass3rd),mapping = aes(Fare))
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+ ggtitle(htitle) + theme
gghistPclass <- ggplot(data=melt(Pclass3rd),mapping = aes(x=Pclass3rd$Fare))
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+ ggtitle(htitle) + theme
gghistPclass
gghistPclass <- ggplot(data=Pclass3rd,mapping = aes(x=Pclass3rd$Fare))
gghistPclass
gghistPclass <- ggplot(data=Pclass3rd,mapping = aes(x=Fare))
gghistPclass
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+facet_wrap(~variable,scales = "free_x")+ ggtitle(htitle) + theme
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+ ggtitle(htitle) + theme
gghist+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+facet_wrap(~variable,scales = "free_x")+ +ggtitle("Histogram of Fare analysis | Pclass ==3") + theme
gghist+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+facet_wrap(~variable,scales = "free_x")+ ggtitle("Histogram of Fare analysis | Pclass ==3") + theme
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+ ggtitle("Histogram of Fare analysis | Pclass ==3") + theme
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+ ggtitle("Histogram of Fare analysis | Pclass ==3") + theme +ylab="",
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+ ggtitle("Histogram of Fare analysis | Pclass ==3") + theme + ylab=""
gghistPclass+geom_histogram(bins = 20,color=hcolor,fill=hfill,na.rm = TRUE)+ ggtitle("Histogram of Fare analysis | Pclass ==3") + theme
#box plot
#valdiation of player's age across
ggFareboxplot <- ggplot(Pclass3rd,aes(Fare)) +geom_boxplot(fill = "steelblue", colour = "orange",outlier.colour = "red", outlier.shape = 1,na.rm=TRUE)+ggtitle("Fare analysis on Pclass ==3")
ggFareboxplot+theme
#box plot
#valdiation of player's age across
ggFareboxplot <- ggplot(Pclass3rd,aes(Fare)) +geom_boxplot(fill = "steelblue", colour = "orange",outlier.colour = "red", outlier.shape = 1,na.rm=TRUE)+ggtitle("Fare analysis | Pclass ==3")
ggFareboxplot+theme
ggFareboxplot+theme
table(train_data$Survived,train_data$Embarked)
table(train_data$Embarked,train_data$Survived)
PlotXTabs(train_data, Embarked, Survived, plottype = "side")
library(PlotXTabs)
install.packages("PlotXTabs")
library(productplots)
install.packages("productplots")
library(productplots)
PlotXTabs(train_data, Embarked, Survived, plottype = "side",na.rm=TRUE)
Plot(XTabs(train_data, Embarked, Survived, plottype = "side",na.rm=TRUE))
table(train_data$Embarked,train_data$Survived)
h <- ggplot(train_data, aes(x=Survived, y=Embarked))
h <- h + geom_tile(aes(fill=bmi_metric), color="white", na.rm=TRUE)
h <- h + scale_fill_gradient(low="lightblue", high= "red")
h <- h + theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
h <- h + theme(
panel.background = element_rect(fill = "black")
) + ggtitle("BMI by age and sex")
h
h <- h + geom_tile(aes(fill="blue"), color="white", na.rm=TRUE)
h <- h + scale_fill_gradient(low="lightblue", high= "red")
h <- h + theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
h <- h + theme(
panel.background = element_rect(fill = "black")
) + ggtitle("BMI by age and sex")
h
h <- ggplot(train_data, aes(x=Survived, y=Embarked))
h <- h + geom_tile(aes(fill="blue"), color="white", na.rm=TRUE)
h <- h + scale_fill_gradient(low="lightblue", high= "red")
h <- h + theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
h <- h + theme(
panel.background = element_rect(fill = "black")
) + ggtitle("BMI by age and sex")
h
# Data Visualization | Cross-Tab
table(train_data$Embarked,train_data$Survived)
fpath_sales <- "/Users/sathishrajendiran/Documents/R/Titanic/SalesData.csv"
sales_data <- readFiles(fpath_sales)
fpath_sales <- "/Users/sathishrajendiran/Documents/R/SalesData.csv"
sales_data <- readFiles(fpath_sales)
dim(sales_data)
str(sales_data)
summary(sales_data)
head(sales_data)
str(sales_data)
salesByRegion <- aggregate(cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Group.region=Region),FUN=SUM)
colnames(sales_data)
salesByRegion <- aggregate(sales_data,cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Group.region=Region),FUN=SUM)
salesByRegion <- aggregate(sales_data,cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Group.region=Region),FUN=sum)
salesByRegion <- aggregate(cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Group.region=Region),FUN=sum)
salesByRegion <- aggregate(data=sales_data,cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Group.region=Region),FUN=sum)
salesByRegion <- aggregate(sales_data,cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Group.region=Region),FUN=sum)
colnames(sales_data)
salesByRegion <- aggregate(sales_data,cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Group=Region),FUN=sum)
salesByRegion <- aggregate(sales_data,cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Region),FUN=sum)
salesByRegion <- aggregate(x=sales_data[Mon,Tue,Wed,Thu,Fri,Sat,Sun],by=list(Region),FUN=sum)
salesByRegion <- aggregate(Mon,Tue,Wed,Thu,Fri,Sat,Sun],by=list(Region),FUN=sum)
salesByRegion <- aggregate(Mon,Tue,Wed,Thu,Fri,Sat,Sun,by=list(Region),FUN=sum)
colnames(sales_data)
head(sales_data)
salesByRegion <- aggregate(sales_data,cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Region),FUN=sum)
salesByRegion <- aggregate(cbind(Mon,Tue,Wed,Thu,Fri,Sat,Sun),by=list(Region),FUN=sum)
salesByRegion <- aggregate(cbind(sales_data$Mon,sales_data$Tue,sales_data$Wed,sales_data$Thu,sales_data$Fri,sales_data$Sat,sales_data$Sun),by=list(sales_data$Region),FUN=sum)
salesByRegion
salesByRegion <- aggregate(cbind(sales_data$Mon,sales_data$Tue,sales_data$Wed,sales_data$Thu,sales_data$Fri,sales_data$Sat,sales_data$Sun)
,by=list(Group.Region=sales_data$Region),FUN=sum)
salesByRegion
salesByRegion <- aggregate(cbind(Mon=sales_data$Mon,Tue=sales_data$Tue,sales_data$Wed,sales_data$Thu,sales_data$Fri,sales_data$Sat,sales_data$Sun)
,by=list(Group.Region=sales_data$Region),FUN=sum)
salesByRegion
salesByRegion <- aggregate(cbind(Mon=sales_data$Mon,Tue=sales_data$Tue,Wed=sales_data$Wed,Thu=sales_data$Thu,Fri=sales_data$Fri,Sat=sales_data$Sat,Sun=sales_data$Sun)
,by=list(Group.Region=sales_data$Region),FUN=sum)
salesByRegion
fpath_sales <- "/Users/sathishrajendiran/Documents/R/SalesData.csv"
salesByRegion
colnames(sales_data)
# Load Sales data
fpath_sales <- "/Users/sathishrajendiran/Documents/R/SalesData.csv"
# function readFiles
readFiles <- function(fpath)
{
dftemp <- data.frame(read.csv(fpath,na.strings=c(""," ","NA")),stringsAsFactors=FALSE)
return(dftemp)
}
sales_data <- readFiles(fpath_sales)
# dim(sales_data)
# str(sales_data)
# summary(sales_data)
# head(sales_data)
# colnames(sales_data)
salesByRegion <- aggregate(cbind(Mon=sales_data$Mon,Tue=sales_data$Tue,Wed=sales_data$Wed,Thu=sales_data$Thu,Fri=sales_data$Fri,Sat=sales_data$Sat,Sun=sales_data$Sun)
,by=list(Group.Region=sales_data$Region),FUN=sum)
salesByRegion
sales_data$InWeekend <- rowSums(sales_data[,c("Sat","Sun")])
sales_data
SalesInWeekend <- aggregate(sales_data$InWeekend,by=list(Region=sales_data$Region),FUN=mean)
SalesInWeekend
SalesInWeekend <- aggregate(Sales=sales_data$InWeekend,by=list(Region=sales_data$Region),FUN=mean)
SalesInWeekend <- aggregate(sales_data$InWeekend,by=list(Region=sales_data$Region),FUN=mean)
SalesInWeekend
train_data
train_data[Sex,Fare]
cols <- c("Sex","Fare")
x <- data.frame(train_data$Sex,train_data$Fare)
x
TitanicFare <- data.frame(train_data$Sex,train_data$Fare)
TitanicFare
TitanicFarebySex <- aggregate(TitanicFare$train_data.Fare,by=list(Sex=TitanicFare$train_data.Sex),FUN=mean)
TitanicFarebySex
plot(train_data$Age)
plot(train_data$Age,log(train_data$Age))
plot(train_data$Age,log(train_data$Age))
Age_min_max <- (train_data$Age-min(train_data$Age,na.rm = TRUE))/(max(train_data$Age,na.rm = TRUE))-(min(train_data$Age,na.rm = TRUE))
Age_min_max
#discretization
train_data$discAge <- cut(train_data$Age,breaks=c(0,10,20,30,40,50,60,Inf),labels = c("child","teens","twenties","thirties","forties","fifties","sixties","old"))
#discretization
train_data$discAge <- cut(train_data$Age,breaks=c(0,10,20,30,40,50,60,Inf),labels = c("child","teens","twenties","thirties","forties","fifties","old"))
train_data
boxplot(train_data$discAge)
hist(train_data$discAge)
# import libraries
install.packages(pkgs=c("ggplot2","reshape2","ggeasy","dplyr","data.table","RSQLite","sqldf","reshape"),repos = "http://cran.us.r-project.org")
library(ggplot2)
library(ggeasy)
library(reshape2)
library(data.table)
library(stats)
library(dplyr)
library(RSQLite)
library(sqldf)
library(reshape)
library(tidyverse)
library(rvest)
library(magrittr)
library(ggmap)
library(stringr)
library(RSQLite)
library(viridis)
library(hrbrthemes)
#import csv files into data frames
athletes_fpath <- "/Users/sathishrajendiran/Documents/olympic-games/athletes.csv"
countries_fpath <- "/Users/sathishrajendiran/Documents/olympic-games/countries.csv"
events_fpath <- "/Users/sathishrajendiran/Documents/olympic-games/events.csv"
# function readFiles
readFiles <- function(fpath)
{
dftemp <- data.frame(read.csv(fpath),stringsAsFactors=FALSE)
return(dftemp)
}
athletes <- readFiles(athletes_fpath)
install.packages(pkgs = c("ggplot2", "reshape2", "ggeasy", "dplyr", "data.table", "RSQLite", "sqldf", "reshape"), repos = "http://cran.us.r-project.org")
train_data
byAgegroup <- aggregate(train_data$Survived,by=list(Region=sales_data$discAge),FUN=sum)
byAgegroup <- aggregate(train_data$Survived,by=list(AgeGroup=train_data$discAge),FUN=sum)
byAgegroup <- aggregate(train_data$Survived,by=list(AgeGroup=train_data$discAge),FUN=count)
str(train_data)
table(train_data$discAge,train_data$Survived)
counts <- table(train_data$discAge,train_data$Survived)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=discAge,
legend = rownames(counts), beside=TRUE)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", color=discAge,
legend = rownames(counts), beside=TRUE)
c("darkblue","red")
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", color=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
counts
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
mdat <- melt(counts, id.vars="day")
head(mdat)
ggplot(mdat, aes(variable, value, fill=day)) +
geom_bar(stat="identity", position="dodge")
ggplot(mdat, aes(counts, value, fill=day)) +
geom_bar(stat="identity", position="dodge")
ggplot(mdat, aes(counts, value, fill=discAge)) +
geom_bar(stat="identity", position="dodge")
head(mdat)
ggplot(mdat, aes(Var.1, value, fill=Var.1)) +
geom_bar(stat="identity", position="dodge")
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
ggplot(mdat, aes(Var.1, value, fill=Var.1)) +
geom_bar(stat="identity", position="dodge")
counts
counts
counts
data.frame(counts)
df <- data.frame(counts)
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = value))
g <- ggplot(df, aes(Var1, Var2)) + geom_point(aes(size = value, colour = (Var2!=Var1))) + theme_bw() + xlab("") + ylab("")
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = value))
df <- data.frame(counts)
df
g <- ggplot(df, aes(Var1, Var2)) + geom_point(aes(size = value, colour = (Var1))) + theme_bw() + xlab("") + ylab("")
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = value))
g <- ggplot(df, aes(Var1, Var2)) + geom_point(aes(size = Freq, colour = (Var1))) + theme_bw() + xlab("") + ylab("")
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = Freq))
g  + geom_text(aes(label = Freq))
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = Freq))+ theme(legend.position="none")
df
counts
counts
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = Freq))+theme(legend.position="none")
counts
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = Freq))+theme(legend.position="none")
counts
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = Freq))+theme(legend.position="none")
df
df$Var2[df$Var2 == "0"] <- "No"
df$Var2[df$Var2 == "1"] <- "Yes"
df$Var2[df$Var2 == "0"] <- c("No")
as.factor(df$Var2) <- df$Var2[df$Var2 == "0"] <- c("No")
df
df <- data.frame(counts)
df
df
moreinfo <- data.frame( Survived = c("Yes", "No"),
Var2 = c(1, 0),
stringsAsFactors = FALSE)
moreinfo
Survived <- data.frame( Survived = c("Yes", "No"),
Var2 = c(1, 0),
stringsAsFactors = FALSE)
Survived
merge(df, Survived, by = "Var2")
dfnew <- merge(df, Survived, by = "Var2")
colname(dfnew$Freq) <- c("Value")
colnames(dfnew$Freq) <- c("Value")
dfnew
colnames(dfnew) <- c("Var","AgeCategory","Value","IsSurvived")
IsSurvived
dfnew
colnames(dfnew) <- c("Var","AgeGroup","Value","IsSurvived")
dfnew
dftitanic <- merge(df, Survived, by = "Var2")
colnames(dftitanic) <- c("Var","AgeGroup","Value","IsSurvived")
col_order <- c("AgeGroup","IsSurvived","Value","Var")
dftitanic <- dftitanic[, col_order]
dftitanic
g <- ggplot(dftitanic, aes(AgeGroup, IsSurvived)) + geom_point(aes(size = Value, colour = (AgeGroup))) + theme_bw() + xlab("") + ylab("")
g + scale_size_continuous(range=c(10,30)) + geom_text(aes(label = Value))+theme(legend.position="none")
ggplot(dftitanic, aes(fill=IsSurvived, y=Value, x=AgeGroup)) +
geom_bar(position="dodge", stat="identity")
ggplot(dftitanic, aes(fill=IsSurvived, y=Value, x=AgeGroup)) +
geom_bar(position="dodge", stat="identity") + ylab("Number of People")
ggplot(dftitanic, aes(fill=IsSurvived, y=Value, x=AgeGroup)) +
geom_bar(position="dodge", stat="identity") + ylab("Number of People") + xlab("Age Discretization")
ggplot(dftitanic, aes(fill=IsSurvived, y=Value, x=AgeGroup)) +
geom_bar(position="dodge", stat="identity") + ylab("Number of People") + xlab("")
ggplot(dftitanic, aes(fill=IsSurvived, y=Value, x=AgeGroup)) +
geom_bar(position="dodge", stat="identity") + ylab("Number of People") + xlab("") + ggtitle("Survival analysis by Age Group") + Theme
ggplot(dftitanic, aes(fill=IsSurvived, y=Value, x=AgeGroup)) +
geom_bar(position="dodge", stat="identity") + ylab("Number of People") + xlab("") + ggtitle("Survival analysis by Age Group") + theme
scale(train_data$Age,center = TRUE,scale = TRUE)
train_data$zScoreAge <- scale(train_data$Age,center = TRUE,scale = TRUE)
head(train_data$zScoreAge)
head(train_data)
head(train_data$zScoreAge)
plot(train_data$Age)
ggplot(dftitanic, aes(fill=IsSurvived, y=Value, x=AgeGroup)) +
geom_bar(position="dodge", stat="identity") + ylab("Number of People") + xlab("") + ggtitle("Survival analysis by Age Group") + theme
head(train_data$zScoreAge)
#discretization
train_data$discAge <- cut(train_data$Age,breaks=c(0,10,20,30,40,50,60,Inf),labels = c("child","teens","twenties","thirties","forties","fifties","old"))
counts <- table(train_data$discAge,train_data$Survived)
df <- data.frame(counts)
Survived <- data.frame( Survived = c("Yes", "No"),
Var2 = c(1, 0),
stringsAsFactors = FALSE)
dftitanic <- merge(df, Survived, by = "Var2")
colnames(dftitanic) <- c("Var","AgeGroup","Value","IsSurvived")
col_order <- c("AgeGroup","IsSurvived","Value","Var")
dftitanic <- dftitanic[, col_order]
#Bar plot | Survival analysis by Age Group
ggplot(dftitanic, aes(fill=IsSurvived, y=Value, x=AgeGroup)) +
geom_bar(position="dodge", stat="identity") + ylab("Number of People") + xlab("") + ggtitle("Survival analysis by Age Group") + theme
#discretization
train_data$discAge <- cut(train_data$Age,breaks=c(0,10,20,30,40,50,60,Inf),labels = c("child","teens","twenties","thirties","forties","fifties","old"))
#Bar plot | Survival analysis by Age Group
ggplot(dftitanic, aes(fill=IsSurvived, y=Value, x=AgeGroup)) +
geom_bar(position="dodge", stat="identity") + ylab("Number of People") + xlab("") + ggtitle("Survival analysis by Age Group") + theme
head(train_data$zScoreAge)
#logrithmic plot
plot(train_data$Age,log(train_data$Age))
Age_min_max
random_sample <- train_data(sample(1:nrow(train_data)),100,replace=TRUE)
random_sample <- train_data(sample(1:nrow(train_data)),100,replace=TRUE))
random_sample <- train_data[sample(1:nrow(train_data)),100,replace=TRUE)]
random_sample <- train_data[sample(1:nrow(train_data)),100,replace=TRUE]
random_sample <- train_data[sample(1:nrow(train_data),100),replace=TRUE]
random_sample <- train_data[sample(1:nrow(train_data),100,replace=TRUE]
random_sample <- train_data[sample(1:nrow(train_data),100,replace=TRUE)]
random_sample <- train_data[sample(1:nrow(train_data),100,replace=TRUE),]
table(train_data$Survived)
table(random_sample$Survived)
table(random_sample$Survived)
random_sample <- train_data[sample(1:nrow(train_data),100,replace=TRUE),]
table(train_data$Survived)
table(random_sample$Survived)
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),10),]
table(train_data$Survived)
table(sys_sample$Survived)
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),10),]
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),100),]
table(train_data$Survived)
table(sys_sample$Survived)
nrows(sys_sample)
nrow(sys_sample)
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),100),]
nrow(sys_sample)
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),10),]
nrow(sys_sample)
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),9),]
nrow(sys_sample)
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),10),]
nrow(sys_sample)
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),11),]
nrow(sys_sample)
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),9),]
nrow(sys_sample)
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(0,nrow(train_data),9),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),9),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),8),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),8.9),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),8.8),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),9.1),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),9),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),10),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),1),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),2),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),3),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),4),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),5),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),6),]
sys_sample
#2. Systematic Sampling
sys_sample <- train_data[seq(1,nrow(train_data),9),]
sys_sample
nrow(sys_sample)
table(train_data$Survived)
# 0   1
# 549 342
table(random_sample$Survived)
# 0   1
# 549 342
table(random_sample$Survived)
